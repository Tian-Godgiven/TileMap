tinymce.PluginManager.add('myplugins', function(editor, url) {
    //字体颜色按键
        //按钮样式
        editor.ui.registry.addIcon(
          'TextColor_icon',
          '<div id="tiletext_color" class="rightArea_button down_color_select">\
                <div>\
                    <div class="button_icon"></div>\
                    <div class="button_down_colorBar colorpicker_color"></div>\
                </div>\
          </div>');
        // 添加自定义按钮到菜单栏
        editor.ui.registry.addSplitButton('TextColor', {
            icon: "TextColor_icon",
            tooltip:"文本颜色",
            //点击侧栏弹出选色器
            fetch: function() {
                showColorpicker($("#tiletext_color div"),"down",null,"text")
            },
            onItemAction: function() {
            },
            onAction:function(){
                //获取bar的颜色并用于修改选择区域
                var color = $("#tiletext_color div .colorpicker_color").css("background-color")
                tinymce.activeEditor.execCommand("forecolor", false, color);
            }
        });

    //背景颜色按键
        //按钮样式
        editor.ui.registry.addIcon(
            'BackgroundColor_icon',
                '<div id="tiletext_background" class="rightArea_button down_color_select">\
                    <div>\
                        <div class="button_icon"></div>\
                        <div class="button_down_colorBar colorpicker_color"></div>\
                    </div>\
                </div>');
        // 添加自定义按钮到菜单栏
        editor.ui.registry.addSplitButton('BackgroundColor', {
            icon: "BackgroundColor_icon",
            tooltip:"文本背景",
            //点击侧栏弹出选色器
            fetch: function() {
                showColorpicker($("#tiletext_background div"),"down",null,"background")
            },
            onItemAction: function() {},
            onAction:function(){
            //获取bar的颜色并用于修改选择区域
                var color = $("#tiletext_background div .colorpicker_color").css("background-color")
                tinymce.activeEditor.execCommand("backcolor", false, color);
            }
        });

    //插入按键
        //按键样式
        editor.ui.registry.addIcon(
            'TextInsert_icon',
            '<div id="tiletext_insert" class="rightArea_button"></div>');
        //注册插入菜单
        editor.ui.registry.addMenuButton('TextInsert', {
            type: 'nestedmenuitem',
            icon: 'TextInsert_icon',
            tooltip:"插入对象",
            //放入子选项
            fetch: (callback) => {
                const items = [
                    //插入磁贴
                    {
                        type: 'menuitem',
                        text:"插入磁贴",
                        onAction:function(){
                            //打开选择菜单 
                            showTreeSelectMenu("file","tile")
                            //获取选择的磁贴
                            .then(function(tile){
                                //生成对应的迷你磁贴
                                var minitile = createMiniTile(tile).prop('outerHTML')
                                editor.insertContent(minitile);
                            })
                        }
                    },
                    //插入画布
                    {
                        type: 'menuitem',
                        text:"插入画布",
                        onAction:function(){
                            showTreeSelectMenu("file","huabu").then(function(huabu){
                                //生成对应的迷你画布
                                var minihuabu = createMiniHuabu(huabu).prop("outerHTML")
                                editor.insertContent(minihuabu);
                            })
                        }
                    },
                    //插入内容块
                    {
                        type: 'menuitem',
                        text:"插入内容块",
                        onAction:function(){
                            //从选择菜单中获取选中的对象
                            showTreeSelectMenu("file","textblock").then(function(textblock){
                                //生成对应的迷你磁贴,令其无法被编辑
                                var minitextblock = createMiniTextBlock(textblock).addClass('mceNonEditable').prop('outerHTML')
                                editor.insertContent(minitextblock);
                            })
                        }
                    },
                ];
                callback(items);
            },
            onAction:function(){
            }
        });

    //删除按键
        //按键样式
        editor.ui.registry.addIcon(
            'TextClear_icon',
            '<div id="tiletext_clear" class="rightArea_button"></div>');
        //注册插入菜单
        editor.ui.registry.addMenuButton('TextClear', {
            icon: 'TextClear_icon',
            tooltip:"清除",
            fetch: (callback) => {
                //放入子选项
                const items = [
                    //清空样式
                    {
                        type: 'menuitem',
                        text:"清空样式",
                        onAction:function(){
                            tinymce.activeEditor.execCommand('RemoveFormat');
                        }
                    },
                    //清空文本
                    {
                        type: 'menuitem',
                        text:"清空文本",
                        onAction:function(){
                            tinymce.activeEditor.execCommand('Delete');
                        }
                    },
                ];
                callback(items);
            },
            onAction:function(){
            }
        });

    //表格按键
    editor.ui.registry.addMenuButton("quickTable", {
        icon: "table",
        tooltip: "Table",
        fetch: (callback) =>
          callback([
            {
              type: "fancymenuitem",
              fancytype: "inserttable",
              onAction: (data) =>
                editor.execCommand("mceInsertTable", false, {
                  rows: data.numRows,
                  columns: data.numColumns,
                }),
            },
          ]),
      });

    //插件信息
        return {
            getMetadata: function () {
                return {
                    //插件名和链接会显示在“帮助”→“插件”→“已安装的插件”中
                    name: "myplugins",//插件名称
                }
            }
        }


});